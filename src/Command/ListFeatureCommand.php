<?php

declare(strict_types=1);

/*
 * This file is part of the NovawayFeatureFlagBundle package.
 * (c) Novaway <https://github.com/novaway/NovawayFeatureFlagBundle>
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Novaway\Bundle\FeatureFlagBundle\Command;

use Novaway\Bundle\FeatureFlagBundle\Storage\StorageInterface;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Helper\Table;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

final class ListFeatureCommand extends Command
{
    /** @var StorageInterface */
    private $storage;

    public function __construct(StorageInterface $storage)
    {
        parent::__construct('novaway:feature-flag:list');

        $this->storage = $storage;
    }

    protected function configure(): void
    {
        parent::configure(); // TODO: Change the autogenerated stub
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $features = $this->storage->all();

        $table = new Table($output);
        $table->setHeaders(['Name', 'Enabled', 'Description']);
        foreach ($features as $feature) {
            $table->addRow([
                $feature->getKey(),
                $feature->isEnabled() ? 'Yes' : 'No',
                $feature->getDescription(),
            ]);
        }

        $table->render();

        return Command::SUCCESS;
    }
}
